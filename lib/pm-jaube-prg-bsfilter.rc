# pm-jaube-prg-bsfilter.rc -- Interface to Bsfilter program
#
#   File id
#
#       Copyright (C) 1997-2024 Jari Aalto
#
#       This program is free software; you can redistribute it and/or
#       modify it under the terms of the GNU General Public License as
#       published by the Free Software Foundation; either version 2 of the
#       License, or (at your option) any later version
#
#       This program is distributed in the hope that it will be useful, but
#       WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#       General Public License for more details at
#       <http://www.gnu.org/copyleft/gpl.html>.
#
#   Warning
#
#       Put all your Unsolicited Bulk Emacil (aka spam) filters towards the
#       end of your `~/.procmailrc'. The idea is that valid messages are filed
#       first (mailing lists, your work and private mail, bounces) and only
#       the uncategorized messages are checked last.
#
#       YOU CANNOT USE THIS PROCMAIL SUBROUTINE UNLESS YOU HAVE TRAINED THE
#       BAYESIAN PROGRAM FIRST!
#
#       To train:
#
#           $ bsfilter --add-clean good.msg ...
#           $ bsfilter --add-spam  spam.msg ...
#
#   Overview of features
#
#       o   Implements interface to project
#           http://packages.debian.org/testing/mail/bsfilter
#       o   variable `ERROR' is set if the message was UBE.
#       o   Results are available by default in header
#           `X-Spam-Bsfilter-Status'.
#
#   Description
#
#       There are several Bayesian based statistical analysis programs that
#       study the message's tokens and then classify it into two categories:
#       good or bad, or if you like, ham and spam. All the Bayesian programs
#       are not the same, so if you want to achive magic 99.99% probability
#       the only methodology to do that is to chain several programs in
#       serially. There is no single program that can solve the UBE detection.
#       This procmail subroutine implements call interface to program
#       `bsfilter', which must already have been installed.
#
#   About bouncing message back
#
#       The general consensus is, that you should not send bounces. The UBE
#       sender is not there, because the address forged. Do not increase
#       the network traffic; you will not do any good to anybody by
#       bouncing messgas -- you just increase mail traffic even more.
#       Instead save the messages to folders and periodically periodically
#       check their contents.
#
#   Required settings
#
#       If `bsfilter' program is available, define this variable in your
#       `~/.procmailrc'. Use absolute path to make the external shell
#       quick; it'll save server load considerably.
#
#           JA_UBE_BSFILTER_PRG = /usr/bin/bsfilter
#
#       If you _do_ _not_ have program installed, do not leave the
#       variable lying aroung, because it will keep this subroutine active.
#       Calling a non existing program is not a good idea, so it better to
#       empty the variable if the program is not available.
#
#   Required settings
#
#       None. No dependencies to other procmail modules.
#
#   Call arguments (variables to set before calling)
#
#       o   `JA_UBE_BSFILTER_PRG', path to the program.
#       o   `JA_UBE_BSFILTER_HEADER', the header prefix name where the results
#           are put. If not defined, no header is added.
#           Defaults to *X-Spam-Bsfilter-*
#       o   `JA_UBE_BSFILTER_FORCE', if set to _yes_ then call program no matter
#           what. Normally if there already is *X-Spam-Bsfilter-* header,
#           it is assumed that the message has already been checked
#           and no new checking is needed.
#
#   Return values
#
#       o   `ERROR', is set to the return value of `bsfilter' program.
#
#   Usage example
#
#           PMSRC                  = $HOME/procmail # procmail recipe dir
#
#           <other checks, mailing lists, work mail etc.>
#
#           JA_UBE_BSFILTER_PRG    = "/usr/bin/nice -n 5 /usr/bin/bsfilter"
#           INCLUDERC              = $PMSRC/pm-jaube-prg-bsfilter.rc
#
#           #   The ERROR will contains word "yes" if message was spam
#
#           :0 :
#           * ERROR ?? yes
#           junk.mbox
#
#   File layout
#
#       The layout of this file is managed by Emacs packages tinyprocmail.el
#       and tinytab.el for the 4 tab text placement.
#       See project http://freecode.com/projects/emacs-tiny-tools/
#
#   Change Log
#
#       None

dummy = "
========================================================================
pm-jaube-prg-bsfilter.rc: init:"

# ................................................... User variables ...

#   You must define program path, because we don't know
#   if it has been installed in this system or not

JA_UBE_BSFILTER_PRG           = ${JA_UBE_BSFILTER_PRG:-""}

#   You could use "--update" if database is well trained.

JA_UBE_BSFILTER_PRG_OPT       = ${JA_UBE_BSFILTER_PRG_OPT:-""}

#   The header prefix name. If this variable is empty, then external
#   formail call is saved - results can still be checked from variable
#   ERROR.

JA_UBE_BSFILTER_HEADER = ${JA_UBE_BSFILTER_HEADER:-"\
X-Spam-Bsfilter-"}

# Should we check even if there already was header
# JA_UBE_BSFILTER_HEADER

JA_UBE_BSFILTER_FORCE = ${JA_UBE_BSFILTER_FORCE:-"no"}

# ............................................................ do it ...

ERROR  # Kill variable

:0
*                   JA_UBE_BSFILTER_PRG     ??  [a-z]
*$ ! 9876543210^0  ^$JA_UBE_BSFILTER_HEADER
*    9876543210^0   JA_UBE_BSFILTER_FORCE   ?? yes
{
    #   bsfilter uses same headers as spamassassin, so we must
    #   read the results separately.

    :0 w : bsfilter$LOCKEXT
    jaubeBsfilterData=|$JA_UBE_BSFILTER_PRG \
        --pipe \
        --insert-revision \
        --insert-flag \
        --insert-probability \
        $BSFILTER_OPT

    # X-Spam-Revision: bsfilter release 1.0.4 revision 1.63
    # X-Spam-Flag: No
    # X-Spam-Probability: 0.906504

    jaubeBsfilterVer            # Kill variables
    jaubeBsfilterFlag
    jaubeBsfilterStatus

    :0
    * jaubeBsfilterData ?? X-Spam-Revision: \/.*bsfilter
    {
        jaubeBsfilterVer = $MATCH

        :0
        * jaubeBsfilterData ?? X-Spam-Flag: \/.+
        {
            jaubeBsfilterFlag = $MATCH
        }

        :0
        * jaubeBsfilterData ?? X-Spam-Probability: \/.+
        {
            jaubeBsfilterStatus = $MATCH
        }

        :0
        * jaubeBsfilterFlag ?? yes
        {
            ERROR = "yes"

            :0
            * ! jaubeBsfilterStatus ?? ^^^^
            {
                ERROR = "$ERROR $jaubeBsfilterStatus"
            }
        }
    }

    :0 fw
    * ! JA_UBE_BSFILTER_HEADER ?? ^^^^
    * ! jaubeBsfilterFlag      ?? ^^^^
    | ${FORMAIL:-formail}                                        \
      -I "${JA_UBE_BSFILTER_HEADER}Flag: $jaubeBsfilterFlag"     \
      -I "${JA_UBE_BSFILTER_HEADER}Status: $jaubeBsfilterStatus" \
      -I "${JA_UBE_BSFILTER_HEADER}Version: $jaubeBsfilterVer"
}

dummy = "pm-jaube-prg-bsfilter.rc: end: $ERROR"

# End of file
